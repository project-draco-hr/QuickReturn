{
  super.onViewCreated(view,savedInstanceState);
  mValues=getResources().getStringArray(R.array.countries);
  if (mLayoutManagerType.equals("linear")) {
    CountriesLinearLayoutAdapter countriesLinearLayoutAdapter=new CountriesLinearLayoutAdapter(getActivity(),Arrays.asList(mValues));
    RecyclerView.LayoutManager layoutManager=new LinearLayoutManager(getActivity());
    mRecyclerView.setLayoutManager(layoutManager);
    mRecyclerView.addItemDecoration(new DividerItemDecoration(getActivity(),null));
    mRecyclerView.setAdapter(countriesLinearLayoutAdapter);
  }
 else   if (mLayoutManagerType.equals("grid")) {
    CountriesGridLayoutAdapter countriesGridLayoutAdapter=new CountriesGridLayoutAdapter(getActivity(),Arrays.asList(mValues));
    RecyclerView.LayoutManager layoutManager=new GridLayoutManager(getActivity(),2);
    mRecyclerView.setLayoutManager(layoutManager);
    mRecyclerView.addItemDecoration(new GridSpacesItemDecoration(QuickReturnUtils.dp2px(getActivity(),8)));
    mRecyclerView.setAdapter(countriesGridLayoutAdapter);
  }
  int footerHeight=getActivity().getResources().getDimensionPixelSize(R.dimen.footer_height);
  QuickReturnRecyclerViewOnScrollListener scrollListener;
  SpeedyQuickReturnRecyclerViewOnScrollListener scrollListener2;
switch (mQuickReturnAnimationType) {
case TRANSLATION_SIMPLE:
    if (mLayoutManagerType.equals("grid")) {
      scrollListener=new QuickReturnRecyclerViewOnScrollListener.Builder(QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).minFooterTranslation(footerHeight).columnCount(2).build();
    }
 else {
      scrollListener=new QuickReturnRecyclerViewOnScrollListener.Builder(QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).minFooterTranslation(footerHeight).build();
    }
  mRecyclerView.setOnScrollListener(scrollListener);
break;
case TRANSLATION_SNAP:
if (mLayoutManagerType.equals("grid")) {
scrollListener=new QuickReturnRecyclerViewOnScrollListener.Builder(QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).minFooterTranslation(footerHeight).columnCount(2).isSnappable(true).build();
}
 else {
scrollListener=new QuickReturnRecyclerViewOnScrollListener.Builder(QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).minFooterTranslation(footerHeight).isSnappable(true).build();
}
mRecyclerView.setOnScrollListener(scrollListener);
break;
case TRANSLATION_ANTICIPATE_OVERSHOOT:
if (mLayoutManagerType.equals("grid")) {
scrollListener2=new SpeedyQuickReturnRecyclerViewOnScrollListener.Builder(getActivity(),QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).columnCount(2).build();
}
 else {
scrollListener2=new SpeedyQuickReturnRecyclerViewOnScrollListener.Builder(getActivity(),QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).build();
}
mRecyclerView.setOnScrollListener(scrollListener2);
break;
default :
if (mLayoutManagerType.equals("grid")) {
scrollListener=new QuickReturnRecyclerViewOnScrollListener.Builder(QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).minFooterTranslation(footerHeight).columnCount(2).build();
}
 else {
scrollListener=new QuickReturnRecyclerViewOnScrollListener.Builder(QuickReturnViewType.FOOTER).footer(mQuickReturnTextView).minFooterTranslation(footerHeight).build();
}
mRecyclerView.setOnScrollListener(scrollListener);
break;
}
}
